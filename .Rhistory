kable(FF_datn_xtable2016[,c(3,4,5,7,8,12,13,15,16,17)])
FF_datn_xtable2016 <- subset(FF_datn, Year == "2016")
FF_datn_xtable2017 <- subset(FF_datn, Year == "2017")
FF_datn_xtable2018 <- subset(FF_datn, Year == "2018")
FF_datn_xtable2019 <- subset(FF_datn, Year == "2019")
kable(FF_datn_xtable2016[,c(3,4,5,7,8,12,13,15,16,17)])
kable(FF_datn_xtable2016[,c(3,4,5,7,8,12,13,15,16,17)], row.names = NA)
kable(FF_datn_xtable2016[,c(3,4,5,7,8,12,13,15,16,17)], row.names = NULL)
kable(FF_datn_xtable2016[,c(3,4,5,7,8,12,13,15,16,17)], row.names = NA)
kable(FF_datn_xtable2016[,c(3,4,5,7,8,12,13,15,16,17)], row.names = FALSE)
FF_datn_xtable2016 %>% kable(row.names = FALSE) %>% kable_styling()
FF_datn_xtable2016[,c(3,4,5,7,8,12,13,15,16,17)] %>% kable(row.names = FALSE) %>% kable_styling()
FF_datn_xtable2016[,c(3,4,5,7,8,12,13,15,16,17)] %>% kable(row.names = FALSE) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_datn_kable16 <- subset(FF_datn, Year == "2016")
FF_datn_kable17 <- subset(FF_datn, Year == "2017")
FF_datn_kable18 <- subset(FF_datn, Year == "2018")
FF_datn_kable19 <- subset(FF_datn, Year == "2019")
?kable_styling
FF_datn_xtable2016[,c(3,4,5,7,8,12,13,15,16,17)] %>% kable(row.names = FALSE) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_datn_xtable2016[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_datn_xtable2016[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
knitr::kable(FF_datn_xtable2016[,c(3,4,5,12,13,15,16,17)], row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "Pythagorean Expected Wins", "PythagenpatWR", "Pythagenpat Expected Wins", "Difference B/W"))
(FF_datn_xtable2016[,c(3,4,5,12,13,15,16,17)], row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "Pythagorean Expected Wins", "PythagenpatWR", "Pythagenpat Expected Wins", "Difference B/W")) %>% kable_styling()
FF_datn_xtable2016[,c(3,4,5,7,8,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "Pythagorean Expected Wins", "PythagenpatWR", "Pythagenpat Expected Wins", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_datn_xtable2016[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "Pythagorean Expected Wins", "PythagenpatWR", "Pythagenpat Expected Wins", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_datn_xtable2016[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "Pythagorean Expected Wins", "PythagenpatWR", "Pythagenpat Expected Wins", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_datn_xtable2016[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "Pythagorean Expected Wins", "PythagenpatWR", "Pythagenpat Expected Wins", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>% row_spec(0, angle = -45)
FF_datn_xtable2016[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "Pythagorean Expected Wins", "PythagenpatWR", "Pythagenpat Expected Wins", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_datn_xtable2016[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_datn_kable16[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "Pythagorean Expected Wins", "PythagenpatWR", "Pythagenpat Expected Wins", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_datn_kable16[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_datn_xtable2016[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
View(roundtest)
View(roundtest)
roundpythags <- round(FF_datn2019[,c(12,13,15,16,17)], 2)
View(roundpythags)
roundpythags <- round(FF_datn[,c(12,13,15,16,17)], 2)
cbind(FF_datn, roundpythags)
FF_datn <- cbind(FF_datn, roundpythags)
View(FF_datn)
round(FF_datn[,c(12,13,15,16,17)], 2)
View(FF_datn)
FF_datn <- round(FF_datn[,c(12,13,15,16,17)], 2)
FF_datn <- cbind(WLnumeric, FF_dat)
cbind(roundpythags, FF_datn[3,4,5,7,8])
cbind(roundpythags, FF_datn[,3,4,5,7,8])
View(FF_datn)
FF_datn <- cbind(FF_datn, roundpythags)
View(FF_datn)
View(FF_datn)
View(FF_datn)
FF_datn_kable16 <- subset(FF_datn, Year == "2016")
FF_datn_kable17 <- subset(FF_datn, Year == "2017")
FF_datn_kable18 <- subset(FF_datn, Year == "2018")
FF_datn_kable19 <- subset(FF_datn, Year == "2019")
FF_datn_kable16[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
View(FF_datn_kable16)
View(FF_datn_kable16)
FF_datn_kable16[,c(3,4,5,12,13,14,15,16)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_datn_kable16[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_dat <- read.csv("FantasyFootball2019csv.csv")
FF_dat <- na.omit(FF_dat)
names(FF_dat)[1] <- "Final_rank"
FF_dat2016 <- read.csv("FF2016.csv")
names(FF_dat2016)[1] <- "Final_rank"
FF_dat <- rbind(FF_dat, FF_dat2016)
FF_dat <- FF_dat %>% separate(Record, c("Wins","Losses"))
#Separating Wins and Losses creates two character vectors.
W_numeric <- as.numeric(FF_dat[,3])
L_numeric <- as.numeric(FF_dat[,4])
WLnumeric <- cbind(L_numeric, W_numeric)
FF_datn <- cbind(WLnumeric, FF_dat)
FF_datn$Pythag <- FF_datn$PF^2/(FF_datn$PF^2 + FF_datn$PA^2)
FF_datn$PythagWR <- FF_datn$PF^2/(FF_datn$PF^2 + FF_datn$PA^2)
FF_datn_kable16[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
library(knitr)
library(kableExtra)
FF_datn_kable16[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
pythag_exp <- ((FF_datn$PF+FF_datn$PA)/14)^0.287
FF_datn$pythagenpatWR <- FF_datn$PF^pythag_exp / (FF_datn$PF^pythag_exp + FF_datn$PA^pythag_exp)
FF_datn$pythagenpatEW <- FF_datn$pythagenpat * 14
FF_datn$DIFF_pythagenpat_wins <- FF_datn$W_numeric - FF_datn$pythagenpat_exp_wins
FF_datn2019 <- subset(FF_datn, Year == "2019")
pythag_exp2019 <- ((FF_datn2019$PF+FF_datn2019$PA)/10)^0.287
FF_datn2019$pythagenpat <- FF_datn2019$PF^pythag_exp2019 / (FF_datn2019$PF^pythag_exp2019 + FF_datn2019$PA^pythag_exp2019)
FF_datn2019$pythagenpat_exp_wins <- FF_datn2019$pythagenpat * 10
FF_datn2019$DIFF_pythagenpat_wins <- FF_datn2019$W_numeric - FF_datn2019$pythagenpat_exp_wins
roundpythags <- round(FF_datn[,c(12,13,15,16,17)], 2)
FF_datn <- cbind(FF_datn, roundpythags)
FF_datn_kable16 <- subset(FF_datn, Year == "2016")
FF_datn_kable17 <- subset(FF_datn, Year == "2017")
FF_datn_kable18 <- subset(FF_datn, Year == "2018")
FF_datn_kable19 <- subset(FF_datn, Year == "2019")
FF_datn_kable16[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_datn_kable16[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
View(FF_datn_kable16)
View(FF_datn)
View(FF_datn_kable19)
View(FF_datn2019)
View(FF_datn_kable19)
View(FF_datn_kable16)
View(FF_dat)
FF_dat <- FF_dat %>% separate(Record, c("Wins","Losses"))
library(dplyr)
FF_dat <- FF_dat %>% separate(Record, c("Wins","Losses"))
library(tidyr)
FF_dat <- FF_dat %>% separate(Record, c("Wins","Losses"))
View(FF_dat)
W_numeric <- as.numeric(FF_dat[,3])
L_numeric <- as.numeric(FF_dat[,4])
WLnumeric <- cbind(L_numeric, W_numeric)
FF_datn <- cbind(WLnumeric, FF_dat)
FF_dat <- read.csv("FantasyFootball2019csv.csv")
FF_dat <- na.omit(FF_dat)
names(FF_dat)[1] <- "Final_rank"
library(dplyr)
library(tidyr)
#Decided to add 2016 afterwards, even though the scoring uncomparable without knowing the number of receptions.
FF_dat2016 <- read.csv("FF2016.csv")
names(FF_dat2016)[1] <- "Final_rank"
FF_dat <- rbind(FF_dat, FF_dat2016)
FF_dat <- FF_dat %>% separate(Record, c("Wins","Losses"))
#Separating Wins and Losses creates two character vectors.
W_numeric <- as.numeric(FF_dat[,3])
L_numeric <- as.numeric(FF_dat[,4])
WLnumeric <- cbind(L_numeric, W_numeric)
FF_datn <- cbind(WLnumeric, FF_dat)
FF_datn$PythagWR <- FF_datn$PF^2/(FF_datn$PF^2 + FF_datn$PA^2)
#Pythagenpat update
pythag_exp <- ((FF_datn$PF+FF_datn$PA)/14)^0.287
FF_datn$pythagenpatWR <- FF_datn$PF^pythag_exp / (FF_datn$PF^pythag_exp + FF_datn$PA^pythag_exp)
FF_datn$pythagenpatEW <- FF_datn$pythagenpat * 14
FF_datn$DIFF_pythagenpat_wins <- FF_datn$W_numeric - FF_datn$pythagenpat_exp_wins
#Problem with the first form of pythagenpat is that 2019 has only 10 games so far, but exponent assumes 14
FF_datn2019 <- subset(FF_datn, Year == "2019")
pythag_exp2019 <- ((FF_datn2019$PF+FF_datn2019$PA)/10)^0.287
FF_datn2019$pythagenpat <- FF_datn2019$PF^pythag_exp2019 / (FF_datn2019$PF^pythag_exp2019 + FF_datn2019$PA^pythag_exp2019)
FF_datn2019$pythagenpat_exp_wins <- FF_datn2019$pythagenpat * 10
FF_datn2019$DIFF_pythagenpat_wins <- FF_datn2019$W_numeric - FF_datn2019$pythagenpat_exp_wins
View(FF_datn2019)
roundpythags <- round(FF_datn[,c(12,13,15,16,17)], 2)
FF_datn <- cbind(FF_datn, roundpythags)
FF_datn_kable16 <- subset(FF_datn, Year == "2016")
FF_datn_kable17 <- subset(FF_datn, Year == "2017")
FF_datn_kable18 <- subset(FF_datn, Year == "2018")
FF_datn_kable19 <- subset(FF_datn, Year == "2019")
FF_datn_kable16[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
View(FF_datn_kable16)
FF_datn$PythagEW <- FF_datn$PythagWR * 14
View(FF_datn)
FF_datn$DIFF_pythagenpat_wins <- FF_datn$W_numeric - FF_datn$pythagenpatEW
FF_datn2019 <- subset(FF_datn, Year == "2019")
pythag_exp2019 <- ((FF_datn2019$PF+FF_datn2019$PA)/10)^0.287
FF_datn2019$pythagenpat <- FF_datn2019$PF^pythag_exp2019 / (FF_datn2019$PF^pythag_exp2019 + FF_datn2019$PA^pythag_exp2019)
FF_datn2019$pythagenpat_exp_wins <- FF_datn2019$pythagenpat * 10
FF_datn2019$PP_DIFF <- FF_datn2019$W_numeric - FF_datn2019$pythagenpat_exp_wins
FF_dat <- read.csv("FantasyFootball2019csv.csv")
FF_dat <- na.omit(FF_dat)
names(FF_dat)[1] <- "Final_rank"
library(dplyr)
library(tidyr)
#Decided to add 2016 afterwards, even though the scoring uncomparable without knowing the number of receptions.
FF_dat2016 <- read.csv("FF2016.csv")
names(FF_dat2016)[1] <- "Final_rank"
FF_dat <- rbind(FF_dat, FF_dat2016)
FF_dat <- FF_dat %>% separate(Record, c("Wins","Losses"))
#Separating Wins and Losses creates two character vectors.
W_numeric <- as.numeric(FF_dat[,3])
L_numeric <- as.numeric(FF_dat[,4])
WLnumeric <- cbind(L_numeric, W_numeric)
FF_datn <- cbind(WLnumeric, FF_dat)
FF_datn$PythagWR <- FF_datn$PF^2/(FF_datn$PF^2 + FF_datn$PA^2)
FF_datn$PythagEW <- FF_datn$PythagWR * 14
#Pythagenpat update
pythag_exp <- ((FF_datn$PF + FF_datn$PA)/14)^0.287
FF_datn$pythagenpatWR <- FF_datn$PF^pythag_exp / (FF_datn$PF^pythag_exp + FF_datn$PA^pythag_exp)
FF_datn$pythagenpatEW <- FF_datn$pythagenpat * 14
FF_datn$DIFF_pythagenpat_wins <- FF_datn$W_numeric - FF_datn$pythagenpatEW
FF_datn2019 <- subset(FF_datn, Year == "2019")
pythag_exp2019 <- ((FF_datn2019$PF+FF_datn2019$PA)/10)^0.287
FF_datn2019$pythagenpat <- FF_datn2019$PF^pythag_exp2019 / (FF_datn2019$PF^pythag_exp2019 + FF_datn2019$PA^pythag_exp2019)
FF_datn2019$pythagenpat_exp_wins <- FF_datn2019$pythagenpat * 10
FF_datn2019$PP_DIFF <- FF_datn2019$W_numeric - FF_datn2019$pythagenpat_exp_wins
View(FF_datn)
roundpythags <- round(FF_datn[,c(12,13,14,15,16)], 2)
View(roundpythags)
View(roundpythags)
FF_datn <- cbind(FF_datn, roundpythags)
View(FF_datn)
FF_datn <- cbind(WLnumeric, FF_dat)
merge(roundpythags, FF_datn)
mergetest <- merge(roundpythags, FF_datn)
View(mergetest)
install.packages("wooldridge")
library(xtable)
FF_dat <- read.csv("FantasyFootball2019csv.csv")
FF_dat <- na.omit(FF_dat)
names(FF_dat)[1] <- "Final_rank"
library(dplyr)
library(tidyr)
#Decided to add 2016 afterwards, even though the scoring uncomparable without knowing the number of receptions.
FF_dat2016 <- read.csv("FF2016.csv")
names(FF_dat2016)[1] <- "Final_rank"
FF_dat <- rbind(FF_dat, FF_dat2016)
FF_dat <- FF_dat %>% separate(Record, c("Wins","Losses"))
#Separating Wins and Losses creates two character vectors.
W_numeric <- as.numeric(FF_dat[,3])
L_numeric <- as.numeric(FF_dat[,4])
WLnumeric <- cbind(L_numeric, W_numeric)
FF_datn <- cbind(WLnumeric, FF_dat)
FF_datn$PythagWR <- FF_datn$PF^2/(FF_datn$PF^2 + FF_datn$PA^2)
FF_datn$PythagEW <- FF_datn$PythagWR * 14
#Pythagenpat update
pythag_exp <- ((FF_datn$PF + FF_datn$PA)/14)^0.287
FF_datn$pythagenpatWR <- FF_datn$PF^pythag_exp / (FF_datn$PF^pythag_exp + FF_datn$PA^pythag_exp)
FF_datn$pythagenpatEW <- FF_datn$pythagenpat * 14
FF_datn$DIFF_pythagenpat_wins <- FF_datn$W_numeric - FF_datn$pythagenpatEW
#Problem with the first form of pythagenpat is that 2019 has only 10 games so far, but exponent assumes 14
FF_datn2019 <- subset(FF_datn, Year == "2019")
pythag_exp2019 <- ((FF_datn2019$PF+FF_datn2019$PA)/10)^0.287
FF_datn2019$pythagenpat <- FF_datn2019$PF^pythag_exp2019 / (FF_datn2019$PF^pythag_exp2019 + FF_datn2019$PA^pythag_exp2019)
FF_datn2019$pythagenpat_exp_wins <- FF_datn2019$pythagenpat * 10
FF_datn2019$PP_DIFF <- FF_datn2019$W_numeric - FF_datn2019$pythagenpat_exp_wins
#uncategorized stuff
roundtest <- round(FF_datn2019[,15:17], 3)
FF_datn_not2019 <- subset(FF_datn, Year != "2019")
FF_datn$PFG <- ifelse(FF_datn$Year == "2019", FF_datn$PF / 10, FF_datn$PF / 14)
FF_datn$PAG <- ifelse(FF_datn$Year == "2019", FF_datn$PA / 10, FF_datn$PA / 14)
roundpythags <- round(FF_datn[,c(12,13,14,15,16)], 2)
FF_datn <- cbind(FF_datn, roundpythags)
xtable(FF_datn_kable16)
FF_datn_kable16 <- subset(FF_datn, Year == "2016")
FF_datn_kable17 <- subset(FF_datn, Year == "2017")
FF_datn_kable18 <- subset(FF_datn, Year == "2018")
FF_datn_kable19 <- subset(FF_datn, Year == "2019")
xtable(FF_datn_kable16)
xtable(FF_datn_kable16)
xtable <- xtable(FF_datn_kable16)
library(kableExtra)
library(knitr)
kable(FF_datn_kable16)
FF_kable <- FF_datn[,c(3,4,5,12,13,15,16,17)]
View(FF_kable)
View(FF_datn)
View(FF_kable)
FF_kable <- FF_datn[,c(3,4,5,12,13,14,15,16,17)]
View(FF_kable)
FF_kable <- FF_datn[,c(3,4,5,12,13,14,15,16,17)]
kable(FF_datn_kable16, digits = 2)
kable(FF_kable, digits = 2)
options(kableextra.html.bsTable = TRUE)
FF_datn_kable16[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W")) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_datn_kable16[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_datn_kable16[,c(3,4,5,12,13,15,16,17)] %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>% scroll_box(width = "500px", height = "200px")
FF_kable %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
View(FF_kable)
FF_kable %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
?kable_styling
FF_kable %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_kable %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>% scroll_box(width = "1000px", height = "400px")
FF_kable <- FF_kable[order(-pythagenpatEW)]
FF_kable <- FF_kable[order(-FF_kable$pythagenpatEW)]
FF_kable <- FF_kable[,order(-pythagenpatEW)]
FF_kable <- FF_kable[,order(-FF_kable$pythagenpatEW)]
FF_kable <- FF_kable[order(pythagenpatWR),]
FF_kable <- FF_kable[order(FF_kable$pythagenpatEW),]
View(FF_kable)
FF_kable <- FF_kable[-order(FF_kable$pythagenpatEW),]
View(FF_kable)
View(FF_kable)
FF_kable <- FF_datn[,c(3,4,5,12,13,15,16,17)]
FF_kable <- FF_kable[order(-FF_kable$pythagenpatEW),]
View(FF_kable)
FF_kable %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Wins - Pat", "Points/G"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
View(FF_kable)
View(FF_kable)
FF_kable <- FF_datn[,c(3,4,5,12,13,14,15,16,17)]
FF_kable <- FF_kable[order(-FF_kable$pythagenpatEW),]
FF_kable %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Wins - Pat", "Points/G"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
FF_not2019 <- subset(FF_datn, Year != "2019")
FF_kablenot2019 <- FF_not2019[,c(3,4,5,12,13,14,15,16,17)]
FF_kablenot2019 %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>% scroll_box(width = "1000px", height = "400px")
FF_kablenot2019 <- FF_kablenot2019[order(-FF_kablenot2019$pythagenpatEW),]
FF_kablenot2019 %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>% scroll_box(width = "1000px", height = "400px")
FF_kablenot2019 %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>% scroll_box(width = "1200px", height = "400px")
FF_kable %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>% scroll_box(width = "1000px", height = "400px")
FF_dat <- read.csv("FantasyFootball2019csv.csv")
FF_dat <- na.omit(FF_dat)
names(FF_dat)[1] <- "Final_rank"
library(dplyr)
library(tidyr)
#Decided to add 2016 afterwards, even though the scoring uncomparable without knowing the number of receptions.
FF_dat2016 <- read.csv("FF2016.csv")
names(FF_dat2016)[1] <- "Final_rank"
FF_dat <- rbind(FF_dat, FF_dat2016)
FF_dat <- FF_dat %>% separate(Record, c("Wins","Losses"))
#Separating Wins and Losses creates two character vectors.
W_numeric <- as.numeric(FF_dat[,3])
L_numeric <- as.numeric(FF_dat[,4])
WLnumeric <- cbind(L_numeric, W_numeric)
FF_datn <- cbind(WLnumeric, FF_dat)
#none of this stuff works as intended
ggplot(FF_datn, aes(x = Final_rank, y = Year)) + geom_line()
library(reshape2)
FF_datn_melt <- melt(FF_datn, id = "Year")
FF_finalrank <- subset(FF_datn_melt, variable == "Final_rank")
FF_meltRank <- subset(FF_finalrank, variable == "Final_rank")
FF_meltYear <- subset(FF_finalrank, variable == "Year")
FF_melt_bind <- cbind(FF_meltYear, FF_meltRank)
FF_order <- FF_datn[,order("Final_rank")]
#
#orignal pythagorean expectation
FF_datn$PythagWR <- FF_datn$PF^2/(FF_datn$PF^2 + FF_datn$PA^2)
FF_datn$PythagEW <- FF_datn$PythagWR * 14
#Pythagenpat update
pythag_exp <- ((FF_datn$PF + FF_datn$PA)/14)^0.287
FF_datn$pythagenpatWR <- FF_datn$PF^pythag_exp / (FF_datn$PF^pythag_exp + FF_datn$PA^pythag_exp)
FF_datn$pythagenpatEW <- FF_datn$pythagenpat * 14
FF_datn$DIFF_pythagenpat_wins <- FF_datn$W_numeric - FF_datn$pythagenpatEW
#Problem with the first form of pythagenpat is that 2019 has only 10 games so far, but exponent assumes 14
FF_datn2019 <- subset(FF_datn, Year == "2019")
pythag_exp2019 <- ((FF_datn2019$PF+FF_datn2019$PA)/10)^0.287
FF_datn2019$pythagenpat <- FF_datn2019$PF^pythag_exp2019 / (FF_datn2019$PF^pythag_exp2019 + FF_datn2019$PA^pythag_exp2019)
FF_datn2019$pythagenpat_exp_wins <- FF_datn2019$pythagenpat * 10
FF_datn2019$PP_DIFF <- FF_datn2019$W_numeric - FF_datn2019$pythagenpat_exp_wins
options(kableextra.html.bsTable = TRUE)
FF_not2019 <- subset(FF_datn, Year != "2019")
FF_kable <- FF_datn[,c(3,4,5,12,13,14,15,16,17)]
FF_kablenot2019 <- FF_not2019[,c(3,4,5,12,13,14,15,16,17)]
FF_kable <- FF_kable[order(-FF_kable$pythagenpatEW),]
FF_kablenot2019 <- FF_kablenot2019[order(-FF_kablenot2019$pythagenpatEW),]
FF_datn_kable16 <- subset(FF_datn, Year == "2016")
FF_datn_kable17 <- subset(FF_datn, Year == "2017")
FF_datn_kable18 <- subset(FF_datn, Year == "2018")
FF_datn_kable19 <- subset(FF_datn, Year == "2019")
FF_kable %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>% scroll_box(width = "1000px", height = "400px")
library(kableExtra)
library(knitr)
FF_kable <- FF_datn[,c(3,4,5,12,13,14,15,16,17)]
View(FF_datn)
FF_datn$PFG <- ifelse(FF_datn$Year == "2019", FF_datn$PF / 10, FF_datn$PF / 14)
FF_datn$PFG <- ifelse(FF_datn$Year == "2019", FF_datn$PF / 10, FF_datn$PF / 14)
FF_datn$PFG <- ifelse(FF_datn$Year == "2019", FF_datn$PF / 10, FF_datn$PF / 14)
library(kableExtra)
library(knitr)
options(kableextra.html.bsTable = TRUE)
FF_not2019 <- subset(FF_datn, Year != "2019")
FF_kable <- FF_datn[,c(3,4,5,12,13,14,15,16,17)]
FF_kablenot2019 <- FF_not2019[,c(3,4,5,12,13,14,15,16,17)]
FF_kable <- FF_kable[order(-FF_kable$pythagenpatEW),]
FF_kable <- FF_kable[order(-FF_kable$pythagenpatEW),]
FF_kablenot2019 <- FF_kablenot2019[order(-FF_kablenot2019$pythagenpatEW),]
FF_kablenot2019 %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>% scroll_box(width = "1200px", height = "400px")
FF_kable <- FF_datn[,c(3,4,5,11,12,13,14,15,16,17)]
FF_kablenot2019 <- FF_not2019[,c(3,4,5,11,12,13,14,15,16,17)]
FF_kable <- FF_kable[order(-FF_kable$pythagenpatEW),]
FF_kablenot2019 <- FF_kablenot2019[order(-FF_kablenot2019$pythagenpatEW),]
FF_kable %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","Year","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>% scroll_box(width = "1000px", height = "400px")
FF_kablenot2019 %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins", "Year","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>% scroll_box(width = "1200px", height = "400px")
FF_kablenot2019 %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins", "Year","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2, title = "fdsafsd") %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>% scroll_box(width = "1200px", height = "400px")
FF_kablenot2019 %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins", "Year","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2, caption = "Fantasy Football Teams Sorted by Pytagenpat Expected Wins") %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>% scroll_box(width = "1200px", height = "400px")
FF_kablenot2019 %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins", "Year","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2, caption = "Fantasy Football Teams Sorted by Pythagenpat Expected Wins, 2016-2018") %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>% scroll_box(width = "1200px", height = "400px")
FF_kablenot2019 %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins", "Year","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2, caption = "Fantasy Football Teams Sorted by Pythagenpat Expected Wins, 2016-2018") %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>% scroll_box(width = "1000px", height = "400px")
FF_kablenot2019 %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins", "Year","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2, caption = "Fantasy Football Teams Sorted by Pythagenpat Expected Wins, 2016-2018") %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>% scroll_box(width = "1100px", height = "400px")
FF_kablenot2019 %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins", "Year","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2, caption = "Fantasy Football Teams Sorted by Pythagenpat Expected Wins, 2016-2018") %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>% scroll_box(width = "1200px", height = "400px") %>% row_spec(0, angle = -45)
FF_kablenot2019 %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins", "Year","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2, caption = "Fantasy Football Teams Sorted by Pythagenpat Expected Wins, 2016-2018") %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>% scroll_box(width = "1200px", height = "400px")
View(FF_datn_not2019)
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name)
)
library(ggplot2)
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name)
)
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name) + geom_line() + geom_point()
)
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point()
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank(), )
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank(), ) + coord_flip()
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank(), ) + coord_flip()
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank(), )
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank(), ) + scale_y_reverse()
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank(), ) + scale_y_reverse() + scale_y_continuous(breaks = seq(1,10,1))
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank(), ) + scale_y_reverse() + scale_y_continuous(breaks = seq(1,10,1)) + scale_y_continous(breaks = seq(2016,2018,1))
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank(), ) + scale_y_reverse() + scale_y_continuous(breaks = seq(1,10,1)) + scale_y_continuous(breaks = seq(2016,2018,1))
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank(), ) + scale_y_reverse() + scale_y_continuous(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1))
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank(), ) + scale_y_continuous(breaks = seq(10,1,1)) + scale_x_continuous(breaks = seq(2016,2018,1))
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank(), ) + scale_y_continuous(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1))
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank(), ) + scale_y_continuous(breaks = seq(10,1,-1)) + scale_x_continuous(breaks = seq(2016,2018,1))
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank(), ) + scale_y_continuous(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1))
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank(), theme_minial()) + scale_y_continuous(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1))
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank(), theme_minimal()) + scale_y_continuous(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1))
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_continuous(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_minimal()
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_minimal()
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_minimal()
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_linedraw()
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_bw()
install.packages("ggthemes")
library(ggthemes)
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_economist()
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_tufte()
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight()
FF_dat$Team.Name[FF_dat$Team.Name == 'james kepler'] <- "James Kepler"
View(FF_dat)
FF_dat <- read.csv("FantasyFootball2019csv.csv")
FF_dat <- na.omit(FF_dat)
names(FF_dat)[1] <- "Final_rank"
str(FF_dat)
FF_dat <- read.csv("FantasyFootball2019csv.csv", stringsAsFactors = FALSE)
str(FF_dat)
FF_dat <- na.omit(FF_dat)
names(FF_dat)[1] <- "Final_rank"
str(FF_dat)
FF_dat$Team.Name[FF_dat$Team.Name == "james kepler"] <- "James Kepler"
View(FF_dat)
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year", ylab = "Final Rank", fill = "Manager")
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year", ylab = "Final Rank", fill = "Manager")
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year", ylab = "Final Rank")
library(ggrepel)
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name))
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name), box.padding = 1)
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name))
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name), point.padding = 1)
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name))
library(gganimate)
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year: {frame_time}", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name)) + transition_time(Year) + ease_aes('linear')
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name))
gg <- ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name))
gg
gg + transition_states(Year, transition length = 2, state_length = 1)
gg + transition_states(Year, transition_length = 2, state_length = 1)
install.packages("transformr")
library(transformr)
gg + transition_states(Year, transition_length = 2, state_length = 1)
gg + transition_states(Year, transition_length = 2, state_length = 1)
gg + transition_states(Team.Name, transition_length = 2, state_length = 1)
gg + transition_states(Final_rank, transition_length = 2, state_length = 1)
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year: {frame_time}", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name)) + transition_time(Year) + ease_aes('linear')
gg + transition_states(Year, transition_length = 2, state_length = 1)
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year: {frame_time}", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name)) + transition_time(Year) + ease_aes('linear')
FF_dat <- read.csv("FantasyFootball2019csv.csv", stringsAsFactors = FALSE)
FF_dat <- na.omit(FF_dat)
names(FF_dat)[1] <- "Final_rank"
#James will never read this message, but I really had to write a line of code to capitalize his name.
FF_dat$Team.Name[FF_dat$Team.Name == "james kepler"] <- "James Kepler"
library(dplyr)
library(tidyr)
#Decided to add 2016 afterwards, even though the scoring uncomparable without knowing the number of receptions.
FF_dat2016 <- read.csv("FF2016.csv")
names(FF_dat2016)[1] <- "Final_rank"
FF_dat <- rbind(FF_dat, FF_dat2016)
FF_dat <- FF_dat %>% separate(Record, c("Wins","Losses"))
#Separating Wins and Losses creates two character vectors.
W_numeric <- as.numeric(FF_dat[,3])
L_numeric <- as.numeric(FF_dat[,4])
WLnumeric <- cbind(L_numeric, W_numeric)
FF_datn <- cbind(WLnumeric, FF_dat)
#orignal pythagorean expectation
FF_datn$PythagWR <- FF_datn$PF^2/(FF_datn$PF^2 + FF_datn$PA^2)
FF_datn$PythagEW <- FF_datn$PythagWR * 14
#Pythagenpat update
pythag_exp <- ((FF_datn$PF + FF_datn$PA)/14)^0.287
FF_datn$pythagenpatWR <- FF_datn$PF^pythag_exp / (FF_datn$PF^pythag_exp + FF_datn$PA^pythag_exp)
FF_datn$pythagenpatEW <- FF_datn$pythagenpat * 14
FF_datn$DIFF_pythagenpat_wins <- FF_datn$W_numeric - FF_datn$pythagenpatEW
#Problem with the first form of pythagenpat is that 2019 has only 10 games so far, but exponent assumes 14
FF_datn2019 <- subset(FF_datn, Year == "2019")
pythag_exp2019 <- ((FF_datn2019$PF+FF_datn2019$PA)/10)^0.287
FF_datn2019$pythagenpat <- FF_datn2019$PF^pythag_exp2019 / (FF_datn2019$PF^pythag_exp2019 + FF_datn2019$PA^pythag_exp2019)
FF_datn2019$pythagenpat_exp_wins <- FF_datn2019$pythagenpat * 10
FF_datn2019$PP_DIFF <- FF_datn2019$W_numeric - FF_datn2019$pythagenpat_exp_wins
#uncategorized stuff
roundtest <- round(FF_datn2019[,15:17], 3)
FF_datn$PAG <- ifelse(FF_datn$Year == "2019", FF_datn$PA / 10, FF_datn$PA / 14)
#HTML Table outputs
FF_datn$PFG <- ifelse(FF_datn$Year == "2019", FF_datn$PF / 10, FF_datn$PF / 14)
library(kableExtra)
library(knitr)
options(kableextra.html.bsTable = TRUE)
FF_not2019 <- subset(FF_datn, Year != "2019")
FF_kable <- FF_datn[,c(3,4,5,11,12,13,14,15,16,17)]
FF_kablenot2019 <- FF_not2019[,c(3,4,5,11,12,13,14,15,16,17)]
FF_kable <- FF_kable[order(-FF_kable$pythagenpatEW),]
FF_kablenot2019 <- FF_kablenot2019[order(-FF_kablenot2019$pythagenpatEW),]
FF_kable16 <- subset(FF_datn, Year == "2016")
FF_kable17 <- subset(FF_datn, Year == "2017")
FF_kable18 <- subset(FF_datn, Year == "2018")
FF_kable19 <- subset(FF_datn, Year == "2019")
FF_kable %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins","Year","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>% scroll_box(width = "1000px", height = "400px")
FF_kablenot2019 %>% kable(row.names = FALSE, col.names = c("Final Rank", "Manager", "Wins", "Year","PythagoreanWR", "PythagoreanEW", "PythagenpatWR", "PythagenpatEW", "Difference B/W", "Points/G"), digits = 2) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>% scroll_box(width = "1200px", height = "400px")
##Working time-series ggplot
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight()
##gganimate jitter nightmare
library(gganimate)
library(transformr)
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year: {frame_time}", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name)) + transition_time(Year) + ease_aes('linear')
library(ggthemes)
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year: {frame_time}", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name)) + transition_time(Year) + ease_aes('linear')
library(ggrepel)
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year: {frame_time}", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name)) + transition_time(Year) + ease_aes('linear')
anim_save(ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year: {frame_time}", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name)) + transition_time(Year) + ease_aes('linear')
)
finalrankanim <- ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year: {frame_time}", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name)) + transition_time(Year) + ease_aes('linear')
anim_save(finalrankanim, path = "D:/RLearning/PythagoreanFF")
anim_save(gganimFinalrank, animation = last_animation(), path = "D:/RLearning/PythagoreanFF")
animate(finalrankanim, nframes = 50, fps = 10)
finalrankanim <- ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year: {frame_time}", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name)) + transition_time(Year) + ease_aes('linear')
ggplot(data = FF_datn_not2019, aes(x = Year, y = Final_rank, group = Team.Name, color = Team.Name)) + geom_line() + geom_point() + theme(axis.ticks = element_blank()) + scale_y_reverse(breaks = seq(1,10,1)) + scale_x_continuous(breaks = seq(2016,2018,1)) + theme_fivethirtyeight() + labs(title = "Final Positional Standings by Year: {frame_time}", ylab = "Final Rank") + geom_label_repel(aes(label = Team.Name)) + transition_time(Year) + ease_aes('linear')
anim_save()
anim_save(FinalRankGIF, animation = last_animation(), path = "D:/RLearning/PythagoreanFF")
anim_save(animation = last_animation(), path = "D:/RLearning/PythagoreanFF")
anim_save(FinalRankGIF.gif, animation = last_animation(), path = "D:/RLearning/PythagoreanFF")
anim_save("FinalRankGIF.gif", animation = last_animation(), path = "D:/RLearning/PythagoreanFF")
anim_save("FinalRankGIF.gif", animation = last_animation())
